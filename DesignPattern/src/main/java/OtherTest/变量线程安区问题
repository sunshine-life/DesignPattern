经过上述代码测试
1.静态变量是非线程安全的
2.实例变量是非线程安全的
3.局部变量是线程安全的

原因：
静态变量：线程非安全。
静态变量即类变量，位于方法区，为所有对象共享，共享一份内存，一旦静态变量被修改，其他对象均对修改可见，故线程非安全。



实例变量：单例模式（只有一个对象实例存在）线程非安全，非单例线程安全。
实例变量为对象实例私有，在虚拟机的堆中分配，若在系统中只存在一个此对象的实例，在多线程环境下，“犹如”静态变量那样，被某个线程修改后，其他线程对修改均可见，故线程非安全；如果每个线程执行都是在不同的对象中，那对象与对象之间的实例变量的修改将互不影响，故线程安全。



局部变量：线程安全。
每个线程执行时将会把局部变量放在各自栈帧的工作内存中，线程间不共享，故不存在线程安全问题。


注意：参考JVM每个数据区域的共享与否来思考（方法区与堆中的数据是共享的）
